======================================================================================
Network Protocols
======================================================================================
MPLS (Multi Protocol Label Switching) :
		TEXT : 
		https://www.rcrwireless.com/20140513/fundamentals/mpls-routing
		
		VIDEOS :
		https://www.youtube.com/watch?v=E5Ud1m9h0yc
		https://www.youtube.com/watch?v=U1w-b9GIt0k		[MPLS Part 1: The Basics of Label Switching]
		https://www.youtube.com/watch?v=Hb48e3dPcvk		[MPLS Part 2: MPLS-TP]
		
		
		
SDN (Software Defined Network)
		VIDEOS :
		https://www.youtube.com/watch?v=TQVl5-G3u2U
		

NFV (Network Function Virtualization)
		VIDEOS :
		https://www.youtube.com/watch?v=Vl5UJUR1uV4
		


======================================================================================
ARM Architecture
======================================================================================
ARMv7 Architecture
		VIDEOS :
		https://www.youtube.com/watch?v=7LqPJGnBPMM

ARMv8	 Architecture
		TEXT : 
		https://dornerworks.com/blog/vatranslation		( MMU table walk through )
		
		VIDEOS : 
		https://www.youtube.com/watch?v=Vm02ZMSfdOc	( ARMv8 Technology Preview Part 2 of 4 | AES | Banked Registers | Exception Model )
		https://www.youtube.com/watch?v=9ppbRPgzO_s		( ARMv8 Technology Preview Part 3 of 4 | Exception Model Contd. | MMU |  Translation Page Table  | Memory | AARCH32 & AARCH64 relationships )
		https://www.youtube.com/watch?v=YPGMwuDaN2k	( ARMv8 Technology Preview Part 4 of 4 | Debug | Product Road Map )
		
SMMU - System Memory Management Unit
		VIDEOS : 
		https://www.youtube.com/watch?v=qlH4-oHnBb8		( Virtual Memory: 3 What is Virtual Memory?  )
		https://www.youtube.com/watch?v=59rEMnKWoS4	( Virtual Memory: 4 How Does Virtual Memory Work? )
		https://www.youtube.com/watch?v=KNUJhZCQZ9c	( Virtual Memory: 5 Page Tables )
		https://www.youtube.com/watch?v=ZjKS1IbiGDA		( Virtual Memory: 6 Address Translation )
		https://www.youtube.com/watch?v=6neHHkI0Z0o		( Virtual Memory: 7 Address Translation Example Walkthrough )
		https://www.youtube.com/watch?v=bShqyf-hDfg		( Virtual Memory: 8 Page Faults )
		https://www.youtube.com/watch?v=uDzXXnNy544		( Virtual Memory: 9 Memory Protection )		
		https://www.youtube.com/watch?v=uyrSn3qbZ8U		( Virtual Memory: 10 Making Virtual Memory Fast )
		https://www.youtube.com/watch?v=95QpHJX55bM	( Virtual Memory: 11 TLB Example )
		https://www.youtube.com/watch?v=Z4kSOv49GNc	( Virtual Memory: 12 Multi-level Page Tables )
		https://www.youtube.com/watch?v=3sX5obQCHNA	( Virtual Memory: 13 TLBs and Caches )
		
GIC / INTERRUPT HANDLING (ARM)
		TEXT : 
		https://developer.arm.com/docs/den0024/latest/aarch64-exception-handling/the-generic-interrupt-controller/interrupt-handling
		VIDEOS :
				
Interrupt Virtualization
		VIDEOS : 
		https://www.youtube.com/watch?v=BGGbgufgP_Y	( [2015] ARM interrupt virtualization by Andre Przywara | GICv2 | GICv2 Virtualization Suport |  )

		
ARM Virtualization Extensions
		VIDEOS : 
		https://www.youtube.com/watch?v=uvh6Mu3j1oY		( XPDS15 - ARM: Virtualization Extensions | ARM Interrupts & Virtualization | Hypervisor Architecture | Interrupts | Timers | IOMMU | SMMU |  )

Virtualization
		VIDEOS : 
		https://www.youtube.com/watch?v=cuXyGkZRUKU	( [2017] Nested Virtualization on ARM by Christoffer Dall )
			


======================================================================================
XOR Linked List
======================================================================================
		TEXT :
		https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/
		

======================================================================================
CACHE Coherency
======================================================================================	
		VIDEOS : 
		https://www.youtube.com/watch?v=BNH-3TwmVN0			( 4 2 1 Cache Coherence )
		https://www.youtube.com/watch?v=_J5xngIULes				( 4 2 2 Classes of Cache Coherence Protocols | Snooping Protocol (Write Invalidate / Write Update) | Directory Based Protocol )
		https://www.youtube.com/watch?v=ctLdDiCDF28				( 4 2 3 MSI Write Invalidate Protocol )
		
======================================================================================
Threaded vs Non-Threaded IRQs
======================================================================================	
		TEXT : 
		https://mindlinux.wordpress.com/2016/10/11/irqs-the-hard-the-soft-the-threaded-and-the-preemptible-alison-chaiken 		( IRQs: the Hard, the Soft, the Threaded and the Preemptible – Alison Chaiken )
		https://lwn.net/Articles/302043/											( Moving interrupts to threads - LWN.net )
		
		VIDEOS : 
		https://www.youtube.com/watch?v=-pehAzaP1eg				( IRQs: the Hard, the Soft, the Threaded and the Preemptible )
		
======================================================================================		
Message Passing in Linux
======================================================================================
		TEXT : 
		https://opensource.com/article/19/4/interprocess-communication-linux-storage			( Part 1 : Inter-process communication in Linux: Shared storage, Shared Memory)
		https://opensource.com/article/19/4/interprocess-communication-linux-channels		( Part 2 : Inter-process communication in Linux: Using pipes and message queues)
		https://www.geeksforgeeks.org/ipc-using-message-queues/										( IPC using Message Queues )

		VIDEOS : 
		https://www.youtube.com/watch?v=G2vwkBZy894
		
======================================================================================
Fork
======================================================================================
	TEXT : 
	https://www.geeksforgeeks.org/fork-system-call/															( fork() in C )
	https://www.geeksforgeeks.org/zombie-and-orphan-processes-in-c/								( Zombie and Orphan Processes in C)
	https://www.geeksforgeeks.org/fork-memory-shared-bw-processes-created-using/		( fork() and memory shared b/w processes created using it )
	

======================================================================================
Interview Questions Link
======================================================================================
https://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/			( Find Merging point of two linked lists )
		

======================================================================================
Huge TLBs (Linux)
======================================================================================
https://www.kernel.org/doc/html/latest/admin-guide/mm/hugetlbpage.html					()
		
		
======================================================================================
Series on Linux Device Driver - Embetronicx
======================================================================================
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-part-1-introduction/															( Part 1 – Introduction to Linux )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-part-2-first-device-driver/ 										( Part 2 – First Linux Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-part-3-passing-arguments-to-device-driver/ 		( Part 3 – Module Parameter )
https://embetronicx.com/tutorials/linux/device-drivers/character-device-driver-major-number-and-minor-number/							( Part 4 – Character Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/device-file-creation-for-character-drivers/														( Part 5 – Device File Creation )
https://embetronicx.com/tutorials/linux/device-drivers/device-file-creation-for-character-drivers/														( Part 6 – Cdev structure and File Operations )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-programming/														( Part 7 – Linux Device Driver Programming )
https://embetronicx.com/tutorials/linux/device-drivers/ioctl-tutorial-in-linux/																						( Part 8 – I/O Control in Linux IOCTL() )
https://embetronicx.com/tutorials/linux/device-drivers/procfs-in-linux/																								( Part 9 – Procfs in Linux )
https://embetronicx.com/tutorials/linux/device-drivers/waitqueue-in-linux-device-driver-tutorial/														( Part 10 – WaitQueue in Linux )
https://embetronicx.com/tutorials/linux/device-drivers/sysfs-in-linux-kernel/																						( Part 11 – Sysfs in Linux Kernel )
https://embetronicx.com/tutorials/linux/device-drivers/interrupts-in-linux-kernel/																				( Part 12 – Interrupts in Linux Kernel )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-part-13-interrupt-example-program-in-linux-kernel/	( Part 13 – Interrupts Example Program in Linux Kernel )
https://embetronicx.com/tutorials/linux/device-drivers/workqueue-in-linux-kernel/																				( Part 14 – Workqueue in Linux Kernel Part 1 )
https://embetronicx.com/tutorials/linux/device-drivers/workqueue-in-linux-dynamic-creation/															( Part 15 – Workqueue in Linux Kernel Part 2 )
https://embetronicx.com/tutorials/linux/device-drivers/work-queue-in-linux-own-workqueue/																( Part 16 – Workqueue in Linux Kernel Part 3 )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-part-17-linked-list-in-linux-kernel/							( Part 17 – Linked List in Linux Kernel Part 1 )
https://embetronicx.com/tutorials/linux/device-drivers/example-linked-list-in-linux-kernel/																	( Part 18 – Example Linked List in Linux Kernel )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-drivers-tutorial-kernel-thread/														( Part 19 – Kernel Thread )
https://embetronicx.com/tutorials/linux/device-drivers/tasklet-static-method/																						( Part 20 – Tasklet | Static Method )
https://embetronicx.com/tutorials/linux/device-drivers/tasklets-dynamic-method/																				( Part 21 – Tasklet | Dynamic Method )
https://embetronicx.com/tutorials/linux/device-drivers/linux-device-driver-tutorial-mutex-in-linux-kernel/											( Part 22 – Mutex in Linux Kernel )
https://embetronicx.com/tutorials/linux/device-drivers/spinlock-in-linux-kernel-1/																				( Part 23 – Spinlock in Linux Kernel Part 1 )
https://embetronicx.com/tutorials/linux/device-drivers/read-write-spinlock/																							( Part 24 – Read Write Spinlock in Linux Kernel (Part 2) )
https://embetronicx.com/tutorials/linux/device-drivers/sending-signal-from-linux-device-driver-to-user-space/									(Part 25 – Sending Signal from Linux Device Driver to User Space)
https://embetronicx.com/tutorials/linux/device-drivers/using-kernel-timer-in-linux-device-driver/														( Part 26 – Using Kernel Timer In Linux Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/using-high-resolution-timer-in-linux-device-driver/											( Part 27 – Using High Resolution Timer In Linux Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/completion-in-linux/																							( Part 28 – Thread Completion in Linux Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/export_symbol-in-linux-device-driver/																( Part 29 – EXPORT_SYMBOL in Linux Device Driver )
https://embetronicx.com/tutorials/linux/device-drivers/atomic-variables-atomic-operation/																	( Part 30 - Atomic variable in Linux Device Driver  )






